const {Wit, log} = require('node-wit');


module.exports = function (options) {

  if (!options || !options.accessToken) {
    throw new Error('No wit.ai Access Token specified');
  }

  options.minConfidence = options.minConfidence || 0.5;


  const client = new Wit({
    accessToken: options.accessToken,
    logger: new log.Logger(log.DEBUG) // optional
  });

  const middleware = {};

  middleware.receive = function (bot, message, next) {

    //Avoid text payload generated by buttons in Facebook Messenger
    if (message.text && message.text.indexOf("_") == -1 && !message.payload && !message.attachments) {
      client.message(message.text)
        .then((data) => {
        console.log('Wit.ai response: ' + JSON.stringify(data));
        message.entities = data.entities;
        next();
      })
        .catch((err) => {
        console.log(err);
        next(err);
        });
    } else {
      message.entities = {};
      next();
    }
  };

  middleware.hears = function (patterns, message) {
    if (message.entities && Object.keys(message.entities).length) {
      for (var i = 0; i < Object.keys(message.entities).length; i++) {
        for (var t = 0; t < patterns.length; t++) {
          if (Object.keys(message.entities)[i] == patterns[t]){
            for (var j = 0; j < message.entities[Object.keys(message.entities)[i]].length; j++){
              if (message.entities[Object.keys(message.entities)[i]].confidence >= options.minConfidence){
                return true;
              }
            }
          }
        }
      }
    }

    return false;
  };

  return middleware;
};
